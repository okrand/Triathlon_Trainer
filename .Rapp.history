require(graphics)#
library(igraph)#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
facebook_graph<-read.graph(doc, format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-c(fb_table$friend_count)#
max_friends<-max(friend_count)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
points(20, num_friends, pch=20, col='red', type='h')#
axis(1, at=20, labels='M.Nelson')#
dev.off()
require(graphics)#
library(igraph)#
library(XML)#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
facebook_graph<-read.graph(doc, format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-c(fb_table$friend_count)#
max_friends<-max(friend_count)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
points(20, num_friends, pch=20, col='red', type='h')#
axis(1, at=20, labels='M.Nelson')#
dev.off()
install packages('XML')
install.packages('XML')
require(graphics)#
library(igraph)#
library(XML)#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
facebook_graph<-read.graph(doc, format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-c(fb_table$friend_count)#
max_friends<-max(friend_count)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
points(20, num_friends, pch=20, col='red', type='h')#
axis(1, at=20, labels='M.Nelson')#
dev.off()
install.packages('plyr')
install.packages('ggplot2')
install.packages('gridExtra')
require(graphics)#
library(igraph)#
library(XML)#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
facebook_graph<-read.graph('Desktop/mln.xml', format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-fb_table[['friend_count']])#
max_friends<-max(friend_count)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
points(20, num_friends, pch=20, col='red', type='h')#
axis(1, at=20, labels='M.Nelson')#
dev.off()
require(graphics)#
library(igraph)#
library(XML)#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
facebook_graph<-read.graph('Desktop/mln.xml', format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-fb_table[['friend_count']]#
max_friends<-max(friend_count)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
points(20, num_friends, pch=20, col='red', type='h')#
axis(1, at=20, labels='M.Nelson')#
dev.off()
require('XML')#
require('plyr')#
require('ggplot2')#
require('gridExtra')#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParser('Desktop/mln.xml')#
class(doc)#
xmltop<-xmlRoot(doc)#
class(xmltop)#
FB_frame<-ldply(xmlToList('Desktop/mln.xml'), data.frame)#
view(FB_frame)#
friend_count<-FB-frame[['friend_count']]#
class(friend_count)#
max_friends<- max(friend_count)#
num_friends<- length(friend_count)#
xlimit=num_friends+1#
h<-hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
#
dev.off()
require('XML')#
require('plyr')#
require('ggplot2')#
require('gridExtra')#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParser('Desktop/mln.xml')#
class(doc)#
xmltop<-xmlRoot(doc)#
class(xmltop)#
FB_frame<-ldply(xmlToList('Desktop/mln.xml'), data.frame)#
View(FB_frame)#
friend_count<-FB_frame[['friend_count']]#
class(friend_count)#
max_friends<- max(friend_count)#
num_friends<- length(friend_count)#
xlimit=num_friends+1#
h<-hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
#
dev.off()
require(graphics)#
library(igraph)#
library(XML)#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
facebook_graph<-read.graph('Desktop/mln.xml', format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-fb_table$friend_count#
max_friends<-max(friend_count)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
points(20, num_friends, pch=20, col='red', type='h')#
axis(1, at=20, labels='M.Nelson')#
dev.off()
require('XML')#
require('plyr')#
require('ggplot2')#
require('gridExtra')#
require('reshape2')#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParser('Desktop/mln.xml')#
class(doc)#
xmltop<-xmlRoot(doc)#
class(xmltop)#
FB_table<-ldply(xmlToList('Desktop/mln.xml'), data.table)#
View(FB_table)#
friend_count<-FB_table[['friend_count']]#
class(friend_count)#
max_friends<- max(friend_count)#
num_friends<- length(friend_count)#
xlimit=num_friends+1#
h<-hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
#
dev.off()
require('XML')#
require('plyr')#
require('ggplot2')#
require('gridExtra')#
require('reshape2')#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParser('Desktop/mln.xml')#
class(doc)#
xmltop<-xmlRoot(doc)#
class(xmltop)#
FB_frame<-ldply(xmlToList('Desktop/mln.xml'), data.frame)#
View(FB_frame)#
friend_count<-FB_frame[['friend_count']]#
class(friend_count)#
max_friends<- max(friend_count)#
num_friends<- length(friend_count)#
xlimit=num_friends+1#
h<-hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
#
dev.off()
require('XML')#
require('plyr')#
require('ggplot2')#
require('gridExtra')#
require('reshape2')#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
class(doc)#
xmltop<-xmlRoot(doc)#
class(xmltop)#
FB_frame<-ldply(xmlToList('Desktop/mln.xml'), data.frame)#
View(FB_frame)#
friend_count<-FB_frame[['friend_count']]#
class(friend_count)#
max_friends<- max(friend_count)#
num_friends<- length(friend_count)#
xlimit=num_friends+1#
h<-hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
#
dev.off()
require('XML')#
require('plyr')#
require('ggplot2')#
require('gridExtra')#
require('reshape2')#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
class(doc)#
xmltop<-xmlRoot(doc)#
class(xmltop)#
FB_frame<-xmlToList('Desktop/mln.xml')#
View(FB_frame)#
friend_count<-FB_frame[['friend_count']]#
class(friend_count)#
max_friends<- max(friend_count)#
num_friends<- length(friend_count)#
xlimit=num_friends+1#
h<-hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
#
dev.off()
require('XML')#
require('plyr')#
require('ggplot2')#
require('gridExtra')#
require('reshape2')#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
class(doc)#
xmltop<-xmlRoot(doc)#
class(xmltop)#
FB_frame<-xmlToList('Desktop/mln.xml')#
names(FB_frame)#
lapply(FB_frame, class)#
friend_count<-FB_frame[['friend_count']]#
class(friend_count)#
max_friends<- max(friend_count)#
num_friends<- length(friend_count)#
xlimit=num_friends+1#
h<-hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
#
dev.off()
require('XML')#
require('plyr')#
require('ggplot2')#
require('gridExtra')#
require('reshape2')#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
class(doc)#
xmltop<-xmlRoot(doc)#
class(xmltop)#
FB_frame<-ldply(xmlToList('Desktop/mln.xml'), function(x){data.frame(x[names(x)=='friend_count'])})#
#
friend_count<-FB_frame[['friend_count']]#
class(friend_count)#
max_friends<- max(friend_count)#
num_friends<- length(friend_count)#
xlimit=num_friends+1#
h<-hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
#
dev.off()
install.packages('causaleffect')
require(graphics)#
library(igraph)#
library(XML)#
pdf('Desktop/FB_friend_paradox.pdf')#
doc<-xmlParse('Desktop/mln.xml')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='xml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-fb_table$friend_count#
max_friends<-max(friend_count)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
points(20, num_friends, pch=20, col='red', type='h')#
axis(1, at=20, labels='M.Nelson')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/FB_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-fb_table$friend_count#
max_friends<-max(friend_count)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/FB_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-fb_table$friend_count#
friends_with_friends<-friend_count[!friend_count=='NA']#
max_friends<-max(friends_with_friends)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/FB_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-fb_table$friend_count#
class(friend_count)#
friends_with_friends<-friend_count[!friend_count=='NA']#
max_friends<-max(friends_with_friends)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/FB_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
mat<-as.matrix(facebook_graph)#
fb_table<-as.table(mat, header=TRUE)#
friend_count<-fb_table[['friend_count']]#
class(friend_count)#
friends_with_friends<-friend_count[!friend_count=='NA']#
max_friends<-max(friends_with_friends)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/FB_friend_paradox.pdf')#
fb_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-fb_graph[['friend_count']]#
class(friend_count)#
friends_with_friends<-friend_count[!friend_count=='NA']#
max_friends<-max(friends_with_friends)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/FB_friend_paradox.pdf')#
fb_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-fb_graph$node[['friend_count']]#
class(friend_count)#
friends_with_friends<-friend_count[!friend_count=='NA']#
max_friends<-max(friends_with_friends)#
num_friends<- length(friend_count)#
xlimit= num_friends+1#
h<- hist(friend_count, plot=FALSE, breaks=xlimit)#
plot(h$mids, h$counts, log='xy', xaxt='n', ylim=c(1, max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', typ='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
data_frame<-get.data.frame(facebook_graph, what='attributes')#
row.names(data_frame)<-NULL#
friend_count<-list(data_frame['friend_count'])#
max_friends<-max(friend_count[])#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(data_frame['friend_count'], plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
data_frame<-get.data.frame(facebook_graph, what='vertices')#
row.names(data_frame)<-NULL#
friend_count<-list(data_frame['friend_count'])#
max_friends<-max(friend_count[])#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(data_frame['friend_count'], plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
data_frame<-get.data.frame(facebook_graph, what='vertices')#
row.names(data_frame)<-NULL#
friend_count<-list(data_frame['friend_count'])#
max_friends<-max(c(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(data_frame['friend_count'], plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
data_frame<-get.data.frame(facebook_graph, what='vertices')#
row.names(data_frame)<-NULL#
friend_count<-list(data_frame['friend_count'])#
max_friends<-max(c(friend_count))#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(data_frame['friend_count'], plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
data_frame<-get.data.frame(facebook_graph, what='vertices')#
row.names(data_frame)<-NULL#
friend_count<-c(data_frame['friend_count'])#
max_friends<-max(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(data_frame['friend_count'], plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-c(V(facebook_graph)[["friend_count"]])#
max_friends<-max(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(data_frame['friend_count'], plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-c(V(facebook_graph)$friend_count)#
max_friends<-max(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(data_frame['friend_count'], plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-c(V(facebook_graph)$friend_count)#
max_friends<-max(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-c(V(facebook_graph)$friend_count)#
class(friend_count)#
max_friends<-max(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-c(V(facebook_graph)$friend_count)#
names(friend_count)#
lapply(friend_count, class)#
max_friends<-max(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
names(friend_count)#
lapply(friend_count, class)#
max_friends<-max(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='xy', xlim=c(1, (num_friends)), ylim=c(1, 1000), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(friend_count)#
num_friends<-length(friend_count)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, xlim=num_friends, ylim=max_friends, pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(friend_count)#
class(max_friends)#
num_friends<-length(friend_count)#
class(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, xlim=num_friends, ylim=max_friends, pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(sapply(friend_count, max))#
class(max_friends)#
num_friends<-length(friend_count)#
class(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, xlim=num_friends, ylim=max_friends, pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(sapply(friend_count, max))#
class(max_friends)#
num_friends<-length(friend_count)#
class(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, xlim=(0,num_friends), ylim=max_friends, pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(sapply(friend_count, max))#
class(max_friends)#
num_friends<-length(friend_count)#
class(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, xlim=c(0,num_friends), ylim=max_friends, pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(sapply(friend_count, max))#
class(max_friends)#
num_friends<-length(friend_count)#
class(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(c(friend_count))#
class(max_friends)#
num_friends<-length(friend_count)#
class(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(friend_count, na.rm=TRUE)#
class(max_friends)#
num_friends<-length(friend_count)#
class(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(friend_count, na.rm=TRUE)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(friend_count, na.rm=TRUE)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='y', xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(friend_count, na.rm=TRUE)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$counts, h$mids, log='y', xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
max_friends<-max(friend_count, na.rm=TRUE)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F)#
plot(h$mids, h$counts, log='y', xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-c(V(facebook_graph)$friend_count, na.rm=TRUE)#
summary(friend_count)#
max_friends<-max(friend_count, na.rm=TRUE)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F)#
plot(h$mids, h$counts, log='y', xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!friend_count=='NA']#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F)#
plot(h$mids, h$counts, log='y', xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!friend_count=='NA',]#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F)#
plot(h$mids, h$counts, log='y', xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F)#
plot(h$mids, h$counts, log='y', xlim=c(0,num_friends), ylim=c(0,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
h<- hist(friend_count, plot=F)#
plot(h$mids, h$counts, log='y', xlim=c(1,num_friends), ylim=c(1,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
h<- hist(friend_count, plot=F, breaks=num_friends)#
plot(h$mids, h$counts, log='y', xlim=c(0,num_friends), ylim=c(1,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
h<- hist(friend_count,  breaks=num_friends)#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
h<- hist(friend_count, density=TRUE breaks=num_friends)#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
h<- hist(friend_count, density=TRUE, breaks=num_friends)#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
h<- hist(friend_count, freq=FALSE, density=TRUE, breaks=num_friends)#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
plot(friend_count, log='y', xlim=c(0,num_friends), ylim=c(1,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
sort(friend_count)#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
plot(friend_count, log='y', xlim=c(0,num_friends), ylim=c(1,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
sort(friend_count, index.return=TRUE)#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
plot(friend_count, log='y', xlim=c(0,num_friends), ylim=c(1,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
summary(friend_count)#
friend_count<- friend_count[!is.na(friend_count)]#
sort(friend_count)#
summary(friend_count)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
plot(friend_count, log='y', xlim=c(0,num_friends), ylim=c(1,max_friends), pch=20, col='blue', main='Friendship Paradox', xlab='Friends', ylab='Number of Friends', type='h')#
points(x[20], y[num_friends], pch=20, col='red', type='h')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
name<-V(facebook_graph)$name#
friend_frame<-data.frame(setNames(name, friend_count))#
summary(friend_count)#
friend_frame<- friend_frame[complete.cases(friend_frame),]#
summary(friend_frame)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2$name<-factor(friend_frame$name, levels=friend_frame[order(friend_frame$friend_count), "name"])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
name<-V(facebook_graph)$name#
friend_frame<-data.frame(setNames(name, friend_count))#
summary(friend_count)#
friend_frame<- friend_frame[complete.cases(friend_frame),]#
summary(friend_frame)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2['name']<-factor(friend_frame['name'], levels=friend_frame[order(friend_frame['friend_count']), "name"])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
friend_count<-V(facebook_graph)$friend_count#
name<-V(facebook_graph)$name#
friend_frame<-data.frame(setNames(name, friend_count))#
summary(friend_frame)#
summary(friend_count)#
friend_frame<- friend_frame[complete.cases(friend_frame),]#
summary(friend_frame)#
max_friends<-max(friend_count)#
summary(max_friends)#
num_friends<-length(friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2['name']<-factor(friend_frame['name'], levels=friend_frame[order(friend_frame['friend_count']), "name"])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
FB_frame<-data.frame(V(facebook_graph)$name, V(facebook_graph)$friend_count, #
colnames(FB_frame)<-c('name', 'friend_count')#
summary(FB_frame)#
FB_frame<- FB_frame[complete.cases(FB_frame),]#
summary(FB_frame)#
max_friends<-max(FB_frame['friend_count'])#
summary(max_friends)#
num_friends<-length(FB_frame['friend_count'])#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2['name']<-factor(friend_frame['name'], levels=friend_frame[order(friend_frame['friend_count']), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
FB_frame<-data.frame(V(facebook_graph)$name, V(facebook_graph)$friend_count, #
colnames(FB_frame)<-c('name', 'friend_count')#
summary(FB_frame)#
FB_frame<- FB_frame[complete.cases(FB_frame),]#
summary(FB_frame)#
max_friends<-max(c(FB_frame['friend_count']))#
summary(max_friends)#
num_friends<-length(c(FB_frame['friend_count']))#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2['name']<-factor(friend_frame['name'], levels=friend_frame[order(friend_frame['friend_count']), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
FB_frame<-data.frame(V(facebook_graph)$name, V(facebook_graph)$friend_count, #
colnames(FB_frame)<-c('name', 'friend_count')#
summary(FB_frame)#
FB_frame<- FB_frame[complete.cases(FB_frame),]#
summary(FB_frame)#
max_friends<-max(FB_frame[['friend_count']])#
summary(max_friends)#
num_friends<-length(FB_frame[['friend_count']])#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2[['name']]<-factor(friend_frame[['name']], levels=friend_frame[order(friend_frame[['friend_count']]), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
FB_frame<-data.frame(c(V(facebook_graph)$name), c(V(facebook_graph)$friend_count), #
colnames(FB_frame)<-c('name', 'friend_count')#
summary(FB_frame)#
na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame[['friend_count']])#
summary(max_friends)#
num_friends<-length(FB_frame[['friend_count']])#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2[['name']]<-factor(friend_frame[['name']], levels=friend_frame[order(friend_frame[['friend_count']]), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame[['friend_count']])#
summary(max_friends)#
num_friends<-length(FB_frame[['friend_count']])#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2[['name']]<-factor(friend_frame[['name']], levels=friend_frame[order(friend_frame[['friend_count']]), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame[,friend_count])#
summary(max_friends)#
num_friends<-length(FB_frame[,friend_count])#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2[,name]<-factor(friend_frame[,name], levels=friend_frame[order(friend_frame[,friend_count]), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame[,'friend_count'])#
summary(max_friends)#
num_friends<-length(FB_frame[,'friend_count'])#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2[,'name']<-factor(friend_frame[,'name'], levels=friend_frame[order(friend_frame[,'friend_count']), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2[,'name']<-factor(friend_frame$name, levels=friend_frame[order(friend_frame$friend_count), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
friend_frame2[,'name']<-factor(friend_frame$name, levels=friend_frame[order(friend_frame$friend_count), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame2$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(friend_frame2, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')+coord_flip()#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=0.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=2))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=4))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame<-rbind(FB_frame, c('Michael Nelson', num_friends))#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends)#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame$color<-'blue'#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame$color<-'blue'#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(FB_frame$friend_count)]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame$color<-'blue'#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(FB_frame$friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame$color<-'blue'#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
color_v<-rep('blue',num_friends)#
FB_frame$color<-color_v#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
color_v<-rep('blue',num_friends)#
FB_frame$color<-color_v#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
color_v<-rep('blue',num_friends)#
FB_frame$color<-color_v#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', colour=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame$color<-'blue'#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', colour=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame$color<-'blue'#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
summary(FB_frame)#
FB_frame<-rbind(FB_frame, temp)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame$color<-'blue'#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame$color<-'blue'#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(1, num_friends)+ylim(1, max_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
FB_frame$color<-'blue'#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(0, num_friends)+ylim(0, max_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(0, num_friends)+ylim(0, max_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(0, num_friends)+ylim(0, max_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(0, num_friends)+ylim(0, as.integer(max_friends))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+ylim(0, as.integer(max_friends))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(0, num_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(0, num_friends)+ylim(0, 3200)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(0, num_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))+scale_x_continous(limits=c(0,num_friends))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count) )+ geom_bar(stat='identity', color=FB_frame$color)+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=3.5))+ylim(0, max_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(1,155)+ylim(0, max_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim(0,155)+ylim(0, max_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim=c(0,155)+ylim=c(0, max_friends)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color) )+ geom_bar(stat='identity')+coord_flip()+theme(axis.text=element_text(size=3.5))+xlim=c(0,155)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))+ xlim(c(0,155))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))+ coord_cartesian(expand=TRUE)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))+ coord_cartesian(xlim=c(1, num_friends), expand=TRUE)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))+ coord_cartesian(xlim=c(1, num_friends), ylim=c(0, max_friends), expand=TRUE)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))+ coord_cartesian(xlim=c(1, num_friends), ylim=c(0, max_friends), expand=FALSE)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))+ coord_cartesian(xlim=c(1, as.numeric(as.character(num_friends))), ylim=c(0, as.numeric(as.character(max_friends))), expand=FALSE)#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, color=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity', color=FB_frame$color) + coord_flip()+ theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue', stringsAsFactors=FALSE) #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity', color=color) + coord_flip()+ theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame<-FB_frame[order(FB_frame$friend_count),]#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5))#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legen.position='none')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-sd(FB_frame$friend_count)#
summary(dev_f)#
class(dev_f)#
mean_f<-mean(FB_frame$friend_count)#
summary(mean_f)#
class(mean_f)#
median_f<-median(FB_frame$friend_count)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(50, 100, 200), y=2000, labels=c('Mean'+mean_f,'Median'+ median_f, 'Stan Dev'+ dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-sd(FB_frame$friend_count)#
summary(dev_f)#
class(dev_f)#
mean_f<-mean(FB_frame$friend_count)#
summary(mean_f)#
class(mean_f)#
median_f<-median(FB_frame$friend_count)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(50, 100, 200), y=2000, labels=c(paste('Mean: ',mean_f),paste('Median: ', median_f), paste('Stan Dev: ', dev_f)) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-sd(FB_frame$friend_count)#
summary(dev_f)#
class(dev_f)#
mean_f<-mean(FB_frame$friend_count)#
summary(mean_f)#
class(mean_f)#
median_f<-median(FB_frame$friend_count)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(200, 175, 150, 125, 100, 75), y=c(2000, 1950, 2000, 1950, 2000, 1950), labels=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-sd(FB_frame$friend_count)#
summary(dev_f)#
class(dev_f)#
mean_f<-mean(FB_frame$friend_count)#
summary(mean_f)#
class(mean_f)#
median_f<-median(FB_frame$friend_count)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(200, 175, 150, 125, 100, 75), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-sd(FB_frame$friend_count)#
summary(dev_f)#
class(dev_f)#
mean_f<-mean(FB_frame$friend_count)#
summary(mean_f)#
class(mean_f)#
median_f<-median(FB_frame$friend_count)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(100, 80, 60, 40, 20, 10), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-sd(FB_frame$friend_count)#
summary(dev_f)#
class(dev_f)#
mean_f<-mean(FB_frame$friend_count)#
summary(mean_f)#
class(mean_f)#
median_f<-median(FB_frame$friend_count)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 75, 60, 40, 20, 10), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-sd(FB_frame$friend_count)#
summary(dev_f)#
class(dev_f)#
mean_f<-mean(FB_frame$friend_count)#
summary(mean_f)#
class(mean_f)#
median_f<-median(FB_frame$friend_count)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-as.integer(sd(FB_frame$friend_count)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(FB_frame$friend_count)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(FB_frame$friend_count)+0.5)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-as.integer(sd(FB_frame$friend_count)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(FB_frame$friend_count)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(FB_frame$friend_count)+0.5)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='black')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='black') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-as.integer(sd(FB_frame$friend_count)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(FB_frame$friend_count)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(FB_frame$friend_count)+0.5)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='black') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-as.integer(sd(FB_frame$friend_count)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(FB_frame$friend_count)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(FB_frame$friend_count)+0.5)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='blue')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='black') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-as.integer(sd(FB_frame$friend_count)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(FB_frame$friend_count)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(FB_frame$friend_count)+0.5)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='green')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-as.integer(sd(FB_frame$friend_count)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(FB_frame$friend_count)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(FB_frame$friend_count)+0.5)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(name='phonedude_mln', friend_count=num_friends, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(name='phonedude_mln', friend_count=num_friends, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=1), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.25), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color), log='y') + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.25), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
twit_frame$screen_name<-' '#
summary(twit_frame)#
#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.25), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
twit_frame$screen_name[!twit_frame$screen_name=='phonedude_mln']<-' '#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.25), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
twit_frame$screen_name[!twit_frame$screen_name=='phonedude_mln']<-c(1:num_followers)#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.25), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
twit_frame$screen_name[!twit_frame$screen_name=='phonedude_mln']<-c(1:num_followers,)#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.25), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
twit_frame$screen_name[!twit_frame$screen_name=='phonedude_mln']<-'o'#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.25), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
twit_frame$screen_name[!twit_frame$screen_name=='phonedude_mln']<-c(1:num_followers)#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.25), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.25), legend.position='none')+xlab('Follower Count')+ylab('Followers')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), axis.text.x=element_blank(), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red')#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), axis.ticks.x=element_blank(), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.1#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), axis.ticks.x=element_blank(), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text.y=element_text(size=3.5), axis.text.x=element_text(size=.01), axis.ticks.x=element_blank(), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text.x=element_text(size=.1), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text.x=element_text(size=0.05), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text.x=element_text(size=10), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text.x=element_blank(), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text.x=element_text(size=0.01), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.3), axis.text.x=element_text(size=0.01), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3), axis.text.x=element_text(size=0.01), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.01), axis.text.x=element_text(size=3), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.01), axis.text.x=element_text(size=10), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(2000, 1950, 2000, 1950, 2000, 1950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.01), axis.text.x=element_text(size=10), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(90, 80, 70, 60, 50, 40), y=c(50000, 40000, 50000, 40950, 50000, 40950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.01), axis.text.x=element_text(size=10), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(500, 480, 470, 460, 450, 440), y=c(50000, 40000, 50000, 40950, 50000, 40950), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.01), axis.text.x=element_text(size=10), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(500, 480, 460, 440, 425, 410), y=c(50000, 50000, 50000, 50000, 50000, 50000), label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f) )#
dev.off()
require(graphics)#
pdf('Desktop/Twitter_Friend_Paradox.pdf')#
twit_frame<-read.table('Desktop/twitter_follow.txt', sep='\t', header=TRUE)#
twit_frame<-na.omit(twit_frame)#
twit_frame$color<-'blue'#
twit_frame$size<-0.01#
#
max_followers<-max(twit_frame$followers)#
summary(max_followers)#
class(max_followers)#
num_followers<-length(twit_frame$followers)#
summary(num_followers)#
class(num_followers)#
dev_f<-as.integer(sd(twit_frame$followers)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(twit_frame$followers)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(twit_frame$followers)+0.5)#
summary(median_f)#
class(median_f)#
summary(twit_frame)#
temp<-data.frame(screen_name='phonedude_mln', followers=num_followers, color='red', size=0.5)#
twit_frame<-rbind(twit_frame, temp)#
summary(twit_frame)#
num_followers<- num_followers + 1#
summary(num_followers)#
twit_frame$screen_name<-factor(twit_frame$screen_name, levels=twit_frame[order(twit_frame$followers), 'screen_name'])#
#
ggplot(twit_frame, aes(x=screen_name, y=followers, colour=color, size=size)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=0.01), axis.text.x=element_text(size=10), legend.position='none')+xlab('Followers')+ylab('Follower Count')+ggtitle('Freindship Paradox on Twitter')+annotate('text', x= c(500, 480, 460, 440, 425, 410, 395, 380), y=50000, label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f, 'Total Followers: ', num_followers-1) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-as.integer(sd(FB_frame$friend_count)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(FB_frame$friend_count)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(FB_frame$friend_count)+0.5)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 85, 80, 75, 70, 65, 60, 55), y=2000, label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f, 'Total Followers: ', num_friends-1) )#
dev.off()
require(graphics)#
library(igraph)#
library(ggplot2)#
pdf('Desktop/facebook_friend_paradox.pdf')#
facebook_graph<-read.graph('Desktop/mln.graphml', format='graphml')#
name<-V(facebook_graph)$name#
friend_count<-V(facebook_graph)$friend_count#
FB_frame<-data.frame(name=name, friend_count=friend_count, color='blue') #
summary(FB_frame)#
FB_frame<-na.omit(FB_frame)#
summary(FB_frame)#
max_friends<-max(FB_frame$friend_count)#
summary(max_friends)#
class(max_friends)#
num_friends<-length(FB_frame$friend_count)#
summary(num_friends)#
class(num_friends)#
dev_f<-as.integer(sd(FB_frame$friend_count)+0.5)#
summary(dev_f)#
class(dev_f)#
mean_f<-as.integer(mean(FB_frame$friend_count)+0.5)#
summary(mean_f)#
class(mean_f)#
median_f<-as.integer(median(FB_frame$friend_count)+0.5)#
summary(median_f)#
class(median_f)#
summary(FB_frame)#
temp<-data.frame(name='Michael Nelson', friend_count=num_friends, color='red')#
FB_frame<-rbind(FB_frame, temp)#
summary(FB_frame)#
num_friends<- num_friends + 1#
summary(num_friends)#
FB_frame$name<-factor(FB_frame$name, levels=FB_frame[order(FB_frame$friend_count), 'name'])#
ggplot(FB_frame, aes(x=name, y=friend_count, colour=color)) + geom_bar(stat='identity') + coord_flip()+ theme(axis.text=element_text(size=3.5), legend.position='none')+xlab('Friend Count')+ylab('Friends')+ggtitle('Freindship Paradox')+annotate('text', x= c(90, 85, 80, 75, 70, 65, 60, 55), y=2000, label=c('Mean: ', mean_f,'Median: ', median_f, 'Stan Dev: ',  dev_f, 'Total Friends: ', num_friends-1) )#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_edge.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_edge_betweenness(karate_graph)#
plot(karate_eb, karate_graph)#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
plot(karate_eb, karate_graph)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
karate_eb<-cut_at(karate_eb, no=2)#
plot(karate_eb, karate_graph)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
karate_eb<-cut_at(karate_eb, steps=2)#
plot(karate_eb, karate_graph)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(cut_at(karate_graph, no=2))#
plot(karate_eb, karate_graph)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
V(karate_graph)$color<-ifelse(V(karate_graph)$d1=='officers', 'lightblue', 'red')#
plot(karate_eb, karate_graph, frame.color=color)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
V(karate_graph)$color<-ifelse(V(karate_graph)$d1=='officers', 'lightblue', 'red')#
plot(karate_eb, karate_graph, frame.color=V(karate_graph)$color)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
V(karate_graph)$color<-ifelse(V(karate_graph)$d1=='officers', 'lightblue', 'red')#
plot(karate_eb, karate_graph, color=V(karate_graph)$color)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
V(karate_eb)$color<-ifelse(V(karate_eb)$d1=='officers', 'lightblue', 'red')#
plot(karate_eb, karate_graph, frame.color=color)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
V(karate_graph)$color<-ifelse(V(karate_graph)$d1=='officers', 'lightblue', 'red')#
plot(karate_eb, karate_graph, vertex.frame.color=karate_graph$color)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
V(karate_graph)$color<-ifelse(V(karate_graph)$d1=='officers', 'lightblue', 'red')#
plot(karate_eb, karate_graph, vertex.color=karate_graph$color)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
plot(karate_eb, karate_graph)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
V(karate_graph)$color<-ifelse(V(karate_graph)$club=='officers', 'lightblue', 'red')#
plot(karate_eb, karate_graph, vertex.color=karate_graph$color)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
#
plot(karate_eb, karate_graph, label=karate_graph$club)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
#
plot(karate_eb, karate_graph, label=club)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
V(karate_graph)$color<-ifelse(V(karate_graph)$club=='officers', 'lightblue', 'red')#
plot(karate_eb, karate_graph, col=V(karate_graph)$color)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
V(karate_graph)$color<-ifelse(V(karate_graph)$d1=='officers', 'lightblue', 'red')#
plot(karate_eb, karate_graph, col=V(karate_graph)$color)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c(ifelse(V(karate_graph)$d1=='officers', 'lightblue', 'red'))#
plot(karate_eb, karate_graph, col=colors)#
dev.off()
pdf('Desktop/karate_club_cluster_eigen_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors)#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_eigen_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors)#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_edge_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_edge_betweenness(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors)#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_eigen_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors, main="Karate Club Community Prediction Using Leading Eigen")#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_eigen_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors, main="Karate Club Community Prediction Using Leading Eigen")#
legend("officers", fill='red', "Mr. Hi", fill='blue')#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_eigen_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors, main="Karate Club Community Prediction Using Leading Eigen")#
legend(c("officers", "Mr. Hi"), fill=c('red', 'blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_eigen_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors, main="Karate Club Community Prediction Using Leading Eigen")#
legend(legend=c("officers", "Mr. Hi"), fill=c('red', 'blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_eigen_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors, main="Karate Club Community Prediction Using Leading Eigen")#
legend(x=0, legend=c("officers", "Mr. Hi"), fill=c('red', 'blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_edge_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_edge_betweenness(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors, main="Karate Club Communities Using Edge Betweenness")#
legend(x=0, legend=c("officers", "Mr. Hi"), fill=c('red', 'blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_edge_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_edge_betweenness(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors, main="Karate Club Communities Using Edge Betweenness")#
legend(x=0, legend=c("officers", "Mr. Hi"), fill=c('red', 'blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_edge_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_edge_betweenness(karate_graph)#
colors<-c('blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'red', 'blue', 'blue', 'blue', 'blue', 'red', 'red', 'blue', 'blue', 'red', 'blue', 'red', 'blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors)#
legend(x=0, legend=c("officers", "Mr. Hi"), fill=c('red', 'blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_edge_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_edge_betweenness(karate_graph)#
colors<-c('light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'red', 'light blue', 'light blue', 'red', 'light blue', 'red', 'light blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors)#
legend(x=0, legend=c("officers", "Mr. Hi"), fill=c('red', 'blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_edge_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_edge_betweenness(karate_graph)#
colors<-c('light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'red', 'light blue', 'light blue', 'red', 'light blue', 'red', 'light blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors)#
legend(x=0, legend=c("officers", "Mr. Hi"), fill=c('red', 'light blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_eigen_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c('light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'red', 'light blue', 'light blue', 'red', 'light blue', 'red', 'light blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors, main="Karate Club Community Prediction Using Leading Eigen")#
legend(x=0, legend=c("officers", "Mr. Hi"), fill=c('red', 'light blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_edge_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_edge_betweenness(karate_graph)#
colors<-c('light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'red', 'light blue', 'light blue', 'red', 'light blue', 'red', 'light blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors)#
legend(x=0, legend=c("officers", "Mr. Hi"), fill=c('red', 'light blue'))#
dev.off()
require(graphics)#
library(igraph)#
#
pdf('Desktop/karate_club_cluster_eigen_2.pdf')#
karate_graph<-read.graph('Desktop/karate_club.graphml', format='graphml')#
karate_eb<-cluster_leading_eigen(karate_graph)#
colors<-c('light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'light blue', 'light blue', 'light blue', 'light blue', 'red', 'red', 'light blue', 'light blue', 'red', 'light blue', 'red', 'light blue', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red','red')#
plot(karate_eb, karate_graph, col=colors, main="Karate Club Community Prediction Using Leading Eigen")#
legend(x=0, legend=c("officers", "Mr. Hi"), fill=c('red', 'light blue'))#
dev.off()
require(graphics)#
#
pdf("Desktop/mem_data.pdf")#
#
data_table<-read.table(file="Desktop/Assign_10_CS_532/data_set.txt", header=T, sep="\t")#
#
diff_data<-c(data_table$diff)#
#
max_diff<-max(diff_data)#
#
num_zero_diff<- length(diff_data[diff_data==0])#
#
h<-hist(diff_data, plot=F, breaks=max_diff)#
#
plot(h$mids, h$counts, log='xy', xlim= c(1, max_diff), ylim=c(1,20), pch=20, col='blue', main="Time Maps", xlab="Difference in Number of Mementos", ylab="URIs", type='h')#
#
text(c(3000,3000,3000,3000),c(18,16.4,14.4,13), labels=c("Total URIs", length(diff_data), "No Change", num_zero_diff), pos=2, col='black')#
#
dev.off()
require(graphics)#
#
pdf("Desktop/mem_data.pdf")#
#
data_table<-read.table(file="Desktop/Assign_10_CS_532/data_set.txt", header=T, sep="\t")#
#
diff_data<-c(data_table$diff)#
#
max_diff<-max(diff_data)#
#
num_zero_diff<- length(diff_data[diff_data==0])#
plot(diff_data, log='xy', xlim= c(1, 1025), ylim=c(-max_diff,max_diff), pch=20, col='blue', main="Time Maps", xlab="Difference in Number of Mementos", ylab="URIs", type='h')#
#
text(c(3000,3000,3000,3000),c(18,16.4,14.4,13), labels=c("Total URIs", length(diff_data), "No Change", num_zero_diff), pos=2, col='black')#
#
dev.off()
require(graphics)#
#
pdf("Desktop/mem_data.pdf")#
#
data_table<-read.table(file="Desktop/Assign_10_CS_532/data_set.txt", header=T, sep="\t")#
#
diff_data<-c(data_table$diff)#
#
max_diff<-max(diff_data)#
#
num_zero_diff<- length(diff_data[diff_data==0])#
plot(diff_data, xlim= c(1, 1025), ylim=c(-max_diff,max_diff), pch=20, col='blue', main="Time Maps", xlab="Difference in Number of Mementos", ylab="URIs", type='h')#
#
text(c(3000,3000,3000,3000),c(18,16.4,14.4,13), labels=c("Total URIs", length(diff_data), "No Change", num_zero_diff), pos=2, col='black')#
#
dev.off()
require(graphics)#
#
pdf("Desktop/mem_data.pdf")#
#
data_table<-read.table(file="Desktop/Assign_10_CS_532/data_set.txt", header=T, sep="\t")#
#
diff_data<-c(data_table$diff)#
#
max_diff<-max(diff_data)#
#
num_zero_diff<- length(diff_data[diff_data==0])#
plot(diff_data, xlim= c(1, 1025), ylim=c(-100,max_diff), pch=20, col='blue', main="Time Maps", xlab="Difference in Number of Mementos", ylab="URIs", type='h')#
#
text(c(3000,3000,3000,3000),c(18,16.4,14.4,13), labels=c("Total URIs", length(diff_data), "No Change", num_zero_diff), pos=2, col='black')#
#
dev.off()
require(graphics)#
#
pdf("Desktop/mem_data.pdf")#
#
data_table<-read.table(file="Desktop/Assign_10_CS_532/data_set.txt", header=T, sep="\t")#
#
diff_data<-c(data_table$diff)#
#
max_diff<-max(diff_data)#
#
num_zero_diff<- length(diff_data[diff_data==0])#
plot(diff_data, xlim= c(1, 1025), ylim=c(-100,1000), pch=20, col='blue', main="Time Maps", xlab="Difference in Number of Mementos", ylab="URIs", type='h')#
#
text(c(1000,1000,1000,1000),c(800,600,400,300), labels=c("Total URIs", length(diff_data), "No Change", num_zero_diff), pos=2, col='black')#
#
dev.off()
require(graphics)#
#
pdf("Desktop/mem_data.pdf")#
#
data_table<-read.table(file="Desktop/Assign_10_CS_532/data_set.txt", header=T, sep="\t")#
#
diff_data<-c(data_table$diff)#
#
max_diff<-max(diff_data)#
#
num_zero_diff<- length(diff_data[diff_data==0])#
plot(diff_data, xlim= c(1, 1025), ylim=c(-100,1000), pch=20, col='blue', main="Time Maps", xlab="Difference in Number of Mementos", ylab="URIs", type='h')#
#
text(c(1000,1000,1000,1000,1000,1000),c(800,850,750,700,600,550), labels=c("Total URIs", length(diff_data), "No Change", num_zero_diff, "Max Difference", max_diff), pos=2, col='black')#
#
dev.off()
require(graphics)#
#
pdf("Desktop/mem_data.pdf")#
#
data_table<-read.table(file="Desktop/Assign_10_CS_532/data_set.txt", header=T, sep="\t")#
#
diff_data<-c(data_table$diff)#
#
max_diff<-max(diff_data)#
#
num_zero_diff<- length(diff_data[diff_data==0])#
plot(diff_data, xlim= c(1, 1025), ylim=c(-100,1000), pch=20, col='blue', main="Time Maps", xlab="Difference in Number of Mementos", ylab="URIs", type='h')#
#
text(c(1000,1000,1000,1000,1000,1000),c(850,800,700,650,550,500), labels=c("Total URIs", length(diff_data), "No Change", num_zero_diff, "Max Difference", max_diff), pos=2, col='black')#
#
dev.off()
source('~/Desktop/GitRepositories/Triathlon_Trainer/RawData.R', chdir = TRUE)
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
write.csv(data, file="sortBike.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-1.5,1.5), xlab="Time", ylab = "Amplitude", main = "Bike Accelerometer")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 1.5, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(1.5,1.39,1.28), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
write.csv(data, file="sortBike.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-1.5,1.5), xlab="Time", ylab = "Amplitude", main = "Bike Accelerometer")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 1.5, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(1.5,1.39,1.28), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
write.csv(data, file="sortBike.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-5,5), xlab="Time", ylab = "Amplitude", main = "Bike Accelerometer")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 1.5, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(1.5,1.39,1.28), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
write.csv(data, file="sortBike.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-5,5), xlab="Time", ylab = "Amplitude", main = "Bike Accelerometer")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(150, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
write.csv(data, file="sortBike.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-5,5), xlab="Time", ylab = "Amplitude", main = "Bike Accelerometer")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
write.csv(data, file="sortBike.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-5,5), xlab="Time", ylab = "Amplitude", main = "Bike Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
write.csv(data, file="sortBike.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-5,5), xlab="Time", ylab = "Rotation Rate", main = "Bike Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Run.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-5,5), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-5,5), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-10,10), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-15,15), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-16,16), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 4, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(4,3.5,3), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(147, 15, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(17,16,15), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(140, 17, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(17,16,15), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(140, 17, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(17,16,15), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Bike Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(140, 17, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(17,16,15), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-7,7), xlab="Time", ylab = "Rotation Rate", main = "Bike Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(148, 7, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(7,6.5,6), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-10,7), xlab="Time", ylab = "Rotation Rate", main = "Bike Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(148, 7, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(7,6.5,6), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("Bike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V2, type='o', pch='.', col="red", ylim=c(-10,7), xlab="Time", ylab = "Acceleration", main = "Bike Accelerometer")#
lines(data$V3, type='o', pch='.', col="blue")#
lines(data$V4, type='o', pch='.', col="green")#
legend(148, 7, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(7,6.5,6), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("Bike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V2, type='o', pch='.', col="red", xlab="Time", ylab = "Acceleration", main = "Bike Accelerometer")#
lines(data$V3, type='o', pch='.', col="blue")#
lines(data$V4, type='o', pch='.', col="green")#
legend(148, 7, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(7,6.5,6), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("Bike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V2, type='o', pch='.', col="red", ylim=c(-1,1), xlab="Time", ylab = "Acceleration", main = "Bike Accelerometer")#
lines(data$V3, type='o', pch='.', col="blue")#
lines(data$V4, type='o', pch='.', col="green")#
legend(148, 7, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(7,6.5,6), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("Bike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V2, type='o', pch='.', col="red", ylim=c(-1,1.5), xlab="Time", ylab = "Acceleration", main = "Bike Accelerometer")#
lines(data$V3, type='o', pch='.', col="blue")#
lines(data$V4, type='o', pch='.', col="green")#
legend(148, 1.5, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(1.5,1.25,1), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("Bike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V2, type='o', pch='.', col="red", ylim=c(-1,1.5), xlab="Time", ylab = "Acceleration", main = "Bike Accelerometer")#
lines(data$V3, type='o', pch='.', col="blue")#
lines(data$V4, type='o', pch='.', col="green")#
legend(148, 1.5, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(1.5,1.3,1.1), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("Run_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V2, type='o', pch='.', col="red", ylim=c(-1,1.5), xlab="Time", ylab = "Acceleration", main = "Run Accelerometer")#
lines(data$V3, type='o', pch='.', col="blue")#
lines(data$V4, type='o', pch='.', col="green")#
legend(148, 1.5, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(1.5,1.3,1.1), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("Run_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V2^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V3^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V4^2)))#
plot(data$V2, type='o', pch='.', col="red", ylim=c(-10,10), xlab="Time", ylab = "Acceleration", main = "Run Accelerometer")#
lines(data$V3, type='o', pch='.', col="blue")#
lines(data$V4, type='o', pch='.', col="green")#
legend(0, 10, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(10,9,8), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-10,10), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 10, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(10,9,8), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 10, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(10,9,8), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 17, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(17,16,15), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GRun_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortRun.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Run Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 17, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(17.5,16,14.5), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("sortBike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Bike Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 17, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(17.5,16,14.5), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-17,17), xlab="Time", ylab = "Rotation Rate", main = "Bike Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 17, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(17.5,16,14.5), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
require (graphics)#
pdf("GBike_raw.pdf")#
#
#names<- c('TimeStamp','Ax','Ay','Az','Gx','Gy','Gz')#
#
data<-read.csv("Bike.csv", header = FALSE)#
#
#data[order(as.Date(data$V1, format="%Y-%m-%d %H:%M:%S +%f")),]#
#
#data<-data[order(data$V1),]#
#
#write.csv(data, file="sortRun.csv")#
xRMS<-paste("xRMS: ", sqrt(mean(data$V5^2)))#
yRMS<-paste("yRMS: ", sqrt(mean(data$V6^2)))#
zRMS<-paste("zRMS: ", sqrt(mean(data$V7^2)))#
plot(data$V5, type='o', pch='.', col="red", ylim=c(-10,10), xlab="Time", ylab = "Rotation Rate", main = "Bike Gyroscope")#
lines(data$V6, type='o', pch='.', col="blue")#
lines(data$V7, type='o', pch='.', col="green")#
legend(0, 10, c("X", "Y", "Z"), col=c("red","blue","green"), pch=c(20,20,20))#
#
text(c(100,100,100),c(10,9,8), labels=c(xRMS, yRMS ,  zRMS))#
#
dev.off()
